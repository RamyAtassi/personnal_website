{"version":3,"sources":["Components/Navbar.js","Components/Jumbotron.js","Components/Project.js","Components/Alert.js","Components/Footer.js","Components/MainScreen.js","App.js","Reducers/projects.reducer.js","Reducers/likedprojects.reducer.js","Reducers/viewonlylike.reducer.js","Reducers/alert.reducer.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","_this2","react_default","a","createElement","Navbar","color","light","expand","fixed","NavbarBrand","href","style","fontWeight","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","viewonlylike","React","Component","connect","dispatch","view","type","Jumbotron","fluid","className","marginTop","Button","Project","handleClickLike","body","name","desc","pic_url","stack_front","stack_back","days_spent","idproject","likedprojects","length","fetch","method","headers","Content-Type","JSON","stringify","then","res","json","data","like","newlikedproject","project","id","Math","floor","random","alert","setTimeout","closealert","catch","error","console","handleClickDislike","concat","dislikeproject","prevProps","prevState","stackFront","map","e","i","Badge","key","padding","margin","stackBack","display","Col","xs","md","lg","Card","marginBottom","backgroundColor","CardImg","top","width","src","alt","CardBody","CardTitle","fontSize","CardSubtitle","minHeight","CardText","textAlign","Progress","value","outline","status","Msg","Alert","alertType","msg","Foot","MainScreen","componentDidMount","handleProjects","projects","err","log","handleLikeProjects","visible","fetchProjects","projectsList","islike","y","Components_Project","displayOnlyLike","alertsList","Components_Alert","styles","fade","Components_Navbar","main","Components_Jumbotron","Container","Row","alignItems","justifyContent","Footer","position","left","zIndex","store","createStore","combineReducers","arguments","undefined","action","projectsCopy","toConsumableArray","push","likedprojectsCopy","likedproject","index","indexOf","splice","alertCopy","App","es","Components_MainScreen","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iVAWMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,OAASP,EAAKO,OAAOC,KAAZP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACdA,EAAKU,MAAQ,CACXC,QAAQ,GAJOX,wEASjBG,KAAKS,SAAS,CACZD,QAASR,KAAKO,MAAMC,0CAIf,IAAAE,EAAAV,KACP,OACEW,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,KAAKC,MAAM,OAC5CP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAaC,KAAK,IAAIC,MAAO,CAACC,WAAY,OAAQP,MAAO,YAAzD,iBACAJ,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAeC,QAASxB,KAAKI,SAC7BO,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAUjB,OAAQR,KAAKO,MAAMC,OAAQkB,QAAM,GACzCf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAKD,QAAM,GACTf,EAAAC,EAAAC,cAACe,EAAA,EAAD,KACEjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAST,KAAK,IAAII,QAAS,kBAAMd,EAAKd,MAAMkC,cAAa,KAAzD,iBAEFnB,EAAAC,EAAAC,cAACe,EAAA,EAAD,KACEjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAST,KAAK,IAAII,QAAS,kBAAMd,EAAKd,MAAMkC,cAAa,KAAzD,qBA3BKC,IAAMC,WAiDZC,kBACX,KAbJ,SAA4BC,GAC1B,MAAO,CACLJ,aAAc,SAASK,GACnBD,EAAS,CACPE,KAAM,eACND,YAOKF,CAGbtC,mBC3BasC,kBACb,KAZF,SAA4BC,GAC1B,MAAO,CACLJ,aAAc,SAASK,GACrBD,EAAS,CACPE,KAAM,eACND,YAMOF,CAhCD,SAAArC,GACZ,OACEe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,YAAYlB,MAAO,CAAEmB,UAAW,KACzD7B,EAAAC,EAAAC,cAAA,MAAI0B,UAAU,YAAYlB,MAAO,CAAEC,WAAY,SAA/C,eAIAX,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,QAAb,4BACA5B,EAAAC,EAAAC,cAAA,MAAI0B,UAAU,SACd5B,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,KAAG0B,UAAU,QACX5B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAQ1B,MAAM,OAAOS,QAAS,kBAAM5B,EAAMkC,cAAa,KAAvD,qGCXJY,cACJ,SAAAA,EAAY9C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0C,IACjB7C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4C,GAAAvC,KAAAH,KAAMJ,KAcR+C,gBAAkB,WAEhB,IAAMC,EAAO,CACbC,KAAMhD,EAAKD,MAAMiD,KACjBC,KAAMjD,EAAKD,MAAMkD,KACjBC,QAASlD,EAAKD,MAAMmD,QACpBC,YAAanD,EAAKD,MAAMoD,YACxBC,WAAYpD,EAAKD,MAAMqD,WACvBC,WAAYrD,EAAKD,MAAMsD,WACvBC,UAAWtD,EAAKD,MAAMuD,WAGtB,GAAItD,EAAKD,MAAMwD,cAAcC,OAAS,EACpCC,MAAM,mDAAoD,CACtDC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBb,KAAMc,KAAKC,UAAUf,KAEtBgB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJlE,EAAKY,SAAS,CACZuD,MAAM,IAERnE,EAAKD,MAAMqE,gBAAgBF,EAAKG,SAChC,IAAMC,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC3BzE,EAAKD,MAAM2E,MAAM,MAAOJ,GACxBK,WAAY,WACV3E,EAAKD,MAAM6E,WAAWN,IACrB,OAGJO,MAAM,SAACC,GACNC,QAAQD,MAAMA,SAEb,CACL,IAAMR,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC3BzE,EAAKD,MAAM2E,MAAM,QAASJ,GAC1BK,WAAY,WACV3E,EAAKD,MAAM6E,WAAWN,IACrB,OAxDYtE,EA6DnBgF,mBAAqB,SAAC1B,GACpBG,MAAK,oDAAAwB,OAAqD3B,GAAa,CACnEI,OAAQ,WACPK,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJlE,EAAKD,MAAMmF,eAAe5B,GAC1BtD,EAAKY,SAAS,CACZuD,MAAM,IAER,IAAMG,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC3BzE,EAAKD,MAAM2E,MAAM,SAAUJ,GAC3BK,WAAY,WACV3E,EAAKD,MAAM6E,WAAWN,IACrB,OAEJO,MAAM,SAACC,GACRC,QAAQD,MAAMA,MA3ElB9E,EAAKU,MAAQ,CACXyD,KAAMpE,EAAMoE,MAHGnE,kFAQAmF,EAAWC,GACzBD,EAAUhB,OAAShE,KAAKJ,MAAMoE,MAC/BhE,KAAKS,SAAS,CAACuD,KAAMhE,KAAKJ,MAAMoE,wCAuE3B,IAAAtD,EAAAV,KAEHkF,EAAalF,KAAKJ,MAAMoD,YAAYmC,IAAI,SAACC,EAAGC,GAC9C,OACE1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,IAAKF,EAAGtE,MAAM,YAAYM,MAAO,CAACmE,QAAS,EAAGC,OAAQ,IAAKL,KAIlEM,EAAY1F,KAAKJ,MAAMqD,WAAWkC,IAAI,SAACC,EAAGC,GAC5C,OACE1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,IAAKF,EAAGtE,MAAM,YAAYM,MAAO,CAACmE,QAAS,EAAGC,OAAQ,IAAKL,KAIlEO,EAAU,GAMd,OAJC3F,KAAKO,MAAMyD,MAAQhE,KAAKJ,MAAMkC,aAC7B6D,EAAQA,QAAU,OAClBA,EAAQA,QAAU,GAGlBhF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAI1E,MAAOsE,GAChChF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAM3E,MAAO,CAAC4E,aAAc,KAC5BtF,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAC6E,gBAAiB,YAC5BvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAASC,KAAG,EAAC/E,MAAO,CAACgF,MAAO,MAAOb,QAAS,IAAKc,IAAKtG,KAAKJ,MAAMmD,QAASwD,IAAI,oBAE9E5F,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,KACE7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAWpF,MAAO,CAACC,WAAY,OAAQoF,SAAU,KAAM1G,KAAKJ,MAAMiD,MAClElC,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAActF,MAAO,CAACuF,UAAW,GAAIX,aAAc,KAAMjG,KAAKJ,MAAMkD,MACpEnC,EAAAC,EAAAC,cAACgG,EAAA,EAAD,KAAUlG,EAAAC,EAAAC,cAAA,QAAMQ,MAAO,CAACC,WAAY,SAA1B,eAAV,IAAgEX,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,YAAOqE,IAC5EvE,EAAAC,EAAAC,cAACgG,EAAA,EAAD,KAAUlG,EAAAC,EAAAC,cAAA,QAAMQ,MAAO,CAACC,WAAY,SAA1B,cAAV,IAA+DX,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,YAAO6E,IAC3E/E,EAAAC,EAAAC,cAAA,QAAMQ,MAAO,CAACC,WAAY,OAAQwF,UAAW,SAAUtE,UAAW,GAAIyD,aAAc,KAAMjG,KAAKJ,MAAMsD,WAArG,iBACMvC,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAU1F,MAAO,CAAC4E,aAAc,IAAKlF,MAAM,YAAYiG,MAA6B,IAAtBhH,KAAKJ,MAAMsD,WAAe,IAE3FlD,KAAKO,MAAMyD,KAERrD,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAQjB,QAAS,kBAAMd,EAAKmE,mBAAmBnE,EAAKd,MAAMuD,YAAYpC,MAAM,QAA5E,gBADAJ,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAQjB,QAAS,kBAAMd,EAAKiC,mBAAmBsE,SAAO,EAAClG,MAAM,QAA7D,2BAtHEgB,IAAMC,WAuKbC,kBArCf,SAAyB1B,GACvB,MAAO,CACLuB,aAAcvB,EAAMuB,aACpBsB,cAAe7C,EAAM6C,gBAIzB,SAA4BlB,GAC1B,MAAO,CACL+B,gBAAiB,SAASC,GACtBhC,EAAS,CACPE,KAAM,kBACN8B,aAGNa,eAAgB,SAAS5B,GACrBjB,EAAS,CACPE,KAAM,iBACNe,eAGNoB,MAAO,SAAS2C,EAAQ/C,GACpBjC,EAAS,CACPE,KAAM,QACN8E,SACA/C,QAGNM,WAAY,SAASN,GACjBjC,EAAS,CACPE,KAAM,aACN+B,UAMKlC,CAGbS,WCjKayE,EAXH,SAACvH,GAET,OACEe,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOrG,MAAOnB,EAAMyH,WACfzH,EAAM0H,MCGFC,EARF,SAAC3H,GACZ,OACEe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAI0B,UAAU,UAAd,2ECMAiF,cAEJ,SAAAA,IAAa,IAAA3H,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwH,IACX3H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0H,GAAArH,KAAAH,QAMFyH,kBAAoB,WAGlBnE,MAAM,4DACLM,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJlE,EAAKD,MAAM8H,eAAe3D,EAAK4D,YAEhCjD,MAAM,SAAAkD,GAAG,OAAIhD,QAAQiD,IAAID,KAG1BtE,MAAM,oDACLM,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJlE,EAAKD,MAAMkI,mBAAmB/D,EAAKA,QAEpCW,MAAM,SAAAkD,GAAG,OAAIhD,QAAQiD,IAAID,MArB1B/H,EAAKU,MAAM,CACTwH,SAAS,GAHAlI,wEA6BJ,IAAAa,EAAAV,KAED2H,EAAW3H,KAAKJ,MAAMoI,cACtB5E,EAAgBpD,KAAKJ,MAAMwD,cAE3B6E,EAAeN,EAASxC,IAAI,SAACjB,EAASmB,GAExC,IADF,IAAI6C,GAAS,EACFC,EAAI,EAAGA,EAAI/E,EAAcC,OAAQ8E,IAExC,GAAIjE,EAAQf,YAAcC,EAAc+E,GAAGhF,UAAW,CACpD+E,GAAS,EACT,MAKJ,OACEvH,EAAAC,EAAAC,cAACuH,EAAD,CACEvF,KAAMqB,EAAQrB,KACdC,KAAMoB,EAAQpB,KACdC,QAASmB,EAAQnB,QACjBE,WAAYiB,EAAQjB,WACpBD,YAAakB,EAAQlB,YACrBE,WAAYgB,EAAQhB,WACpBC,UAAWe,EAAQf,UACnBa,KAAMkE,EACNG,gBAAiB3H,EAAKd,MAAMkC,aAC5ByD,IAAKF,MAKPiD,EAAatI,KAAKJ,MAAM2E,MAAMY,IAAI,SAACZ,EAAOc,GAC9C,OACE1E,EAAAC,EAAAC,cAAC0H,EAAD,CAAOlH,MAAOmH,EAAOjE,MAAOgB,IAAKF,EAAGiC,IAAK/C,EAAM+C,IAAK9G,OAAQ+D,EAAM2C,OAAQG,UAAW9C,EAAM8C,UAAWoB,MAAM,MAIhH,OACI9H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6H,EAAD,MACA/H,EAAAC,EAAAC,cAAA,OAAKQ,MAAOmH,EAAOG,MAClBL,GAED3H,EAAAC,EAAAC,cAAC+H,EAAD,MACEjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,KACElI,EAAAC,EAAAC,cAACiI,EAAA,EAAD,KACEb,EAEAjI,KAAKJ,MAAMkC,cAAgB9B,KAAKJ,MAAMwD,cAAcC,OAAS,EACzD1C,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAACsE,QAAS,OAAQoD,WAAY,SAAUC,eAAgB,SAAU3C,MAAO,OAAQS,UAAW,SAAUrB,OAAQ,IAAK1E,MAAO,YAAYJ,EAAAC,EAAAC,cAAA,4CAClJ,KAIVF,EAAAC,EAAAC,cAACoI,EAAD,cAtFejH,aA8GzB,IAAMwG,EAAS,CACbG,KAAM,CACJO,SAAU,QACV9C,IAAK,GACL+C,KAAM,EACN9C,MAAO,OACP+C,OAAQ,QAEV7E,MAAO,CACLkB,OAAQ,WAaGxD,kBATf,SAAyB1B,GACvB,MAAO,CACLyH,cAAezH,EAAMoH,SACrBvE,cAAe7C,EAAM6C,cACrBtB,aAAcvB,EAAMuB,aACpByC,MAAOhE,EAAMgE,QApCjB,SAA4BrC,GAC1B,MAAO,CACLwF,eAAgB,SAASC,GACrBzF,EAAS,CACPE,KAAM,cACNuF,cAGNG,mBAAoB,SAASH,GACzBzF,EAAS,CACPE,KAAM,mBACNuF,gBA6BK1F,CAGbuF,mBCrII6B,EAAQC,YACZC,YAAgB,CAAE5B,SCdL,WAA+B,IAAtBA,EAAsB6B,UAAAnG,OAAA,QAAAoG,IAAAD,UAAA,GAAAA,UAAA,GAAX,GAAIE,EAAOF,UAAAnG,OAAA,EAAAmG,UAAA,QAAAC,EACxCE,EAAY7J,OAAA8J,EAAA,EAAA9J,CAAO6H,GACvB,GAAmB,gBAAhB+B,EAAOtH,KAAuB,CAE/B,IADA,IAAMuF,EAAW+B,EAAO/B,SACftC,EAAI,EAAGA,EAAIsC,EAAStE,OAAQgC,IACnCsE,EAAaE,KAAKlC,EAAStC,IAE7B,OAAOsE,EAEP,OAAOhC,GDKmBvE,cEdf,WAAoC,IAA3BA,EAA2BoG,UAAAnG,OAAA,QAAAoG,IAAAD,UAAA,GAAAA,UAAA,GAAX,GAAIE,EAAOF,UAAAnG,OAAA,EAAAmG,UAAA,QAAAC,EAC7CK,EAAiBhK,OAAA8J,EAAA,EAAA9J,CAAOsD,GAC5B,GAAmB,qBAAhBsG,EAAOtH,KAA4B,CAEpC,IADA,IAAM2H,EAAeL,EAAO/B,SACnBtC,EAAI,EAAGA,EAAI0E,EAAa1G,OAAQgC,IACvCyE,EAAkBD,KAAKE,EAAa1E,IAEtC,OAAOyE,EACF,GAAoB,oBAAhBJ,EAAOtH,KAEhB,OADA0H,EAAkBD,KAAKH,EAAOxF,SACvB4F,EACF,GAAoB,mBAAhBJ,EAAOtH,KAA0B,CAC1C,IAAK,IAAI+F,EAAI,EAAGA,EAAI2B,EAAkBzG,OAAQ8E,IAAK,CACjD,IAAI6B,OAAK,EACT,GAAIF,EAAkB3B,GAAGhF,YAAcuG,EAAOvG,UAAW,CACvD6G,EAAQF,EAAkBG,QAAQH,EAAkB3B,IACpD2B,EAAkBI,OAAOF,EAAO,GAChC,OAGJ,OAAOF,EAEP,OAAO1G,GFRkCtB,aGd9B,WAAsC,IAA7BA,EAA6B0H,UAAAnG,OAAA,QAAAoG,IAAAD,UAAA,IAAAA,UAAA,GAAPE,EAAOF,UAAAnG,OAAA,EAAAmG,UAAA,QAAAC,EACnD,MAAmB,iBAAhBC,EAAOtH,OACLsH,EAAOvH,KAMHL,GHMgDyC,MId5C,WAA6B,IAApBA,EAAoBiF,UAAAnG,OAAA,QAAAoG,IAAAD,UAAA,GAAAA,UAAA,GAAZ,GAAIE,EAAQF,UAAAnG,OAAA,EAAAmG,UAAA,QAAAC,EAEtCU,EAASrK,OAAA8J,EAAA,EAAA9J,CAAOyE,GAEpB,GAAmB,UAAhBmF,EAAOtH,KA8BH,IAAoB,eAAhBsH,EAAOtH,KAAsB,CAEtC,IADA,IAAI4H,EACK3E,EAAI,EAAGA,EAAI8E,EAAU9G,OAAQgC,IACpC,GAAG8E,EAAU9E,GAAGlB,KAAOuF,EAAOvF,GAAG,CAC/B6F,EAAQG,EAAUF,QAAQE,EAAU9E,IACpC8E,EAAUD,OAAOF,EAAO,GACxB,MAIJ,OAAOG,EAGP,OAAO5F,EAzCP,MAAqB,QAAlBmF,EAAOxC,QACRiD,EAAUN,KAAK,CACb3C,QAAQ,EACRI,IAAG,mEACHD,UAAW,UACXlD,GAAIuF,EAAOvF,KAENgG,GAEmB,WAAlBT,EAAOxC,QACfiD,EAAUN,KAAK,CACb3C,QAAQ,EACRI,IAAG,oDACHD,UAAW,YACXlD,GAAIuF,EAAOvF,KAENgG,GAEiB,UAAlBT,EAAOxC,QACbiD,EAAUN,KAAK,CACb3C,QAAQ,EACRI,IAAG,yCACHD,UAAW,SACXlD,GAAIuF,EAAOvF,KAENgG,QAPJ,MJKMC,mLAVX,OACEzJ,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAUhB,MAAOA,GACf1I,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,OACb5B,EAAAC,EAAAC,cAACyJ,EAAD,eALQtI,aKLEuI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXNC,IAASC,OAAOlK,EAAAC,EAAAC,cAACiK,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvH,KAAK,SAAAwH,GACjCA,EAAaC","file":"static/js/main.4500f875.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink, } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\" fixed=\"top\">\n          <NavbarBrand href=\"/\" style={{fontWeight: \"bold\", color: '#FD6861'}}>My Tech World</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav navbar>\n              <NavItem>\n                <NavLink href=\"#\" onClick={() => this.props.viewonlylike(false)}>The projects</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#\" onClick={() => this.props.viewonlylike(true)}>TOP 3</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    viewonlylike: function(view) {\n        dispatch({\n          type: 'viewonlylike',\n          view\n        })\n    }\n  }\n}\n\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Header);\n","import React from \"react\";\nimport { Jumbotron, Button } from \"reactstrap\";\nimport { connect } from \"react-redux\";\n\nconst Jumbo = props => {\n  return (\n    <div>\n      <Jumbotron fluid className=\"Jumbotron\" style={{ marginTop: 40 }}>\n        <h1 className=\"display-3\" style={{ fontWeight: \"bold\" }}>\n          Ramy Atassi\n        </h1>\n\n        <p className=\"lead\">Summary of main projects</p>\n        <hr className=\"my-2\" />\n        <p>Full-Stack projects</p>\n        <p className=\"lead\">\n          <Button color=\"dark\" onClick={() => props.viewonlylike(true)}>\n            Discover my projects\n          </Button>\n        </p>\n      </Jumbotron>\n    </div>\n  );\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    viewonlylike: function(view) {\n      dispatch({\n        type: \"viewonlylike\",\n        view\n      });\n    }\n  };\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Jumbo);\n","import React from 'react';\nimport { Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button, Col, Badge, Progress } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nclass Project extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      like: props.like\n    }\n  }\n\n  // SECURITY FOR UNSAFE RELOADING (OPTIONAL)\n  componentDidUpdate(prevProps, prevState) {\n    if(prevProps.like !== this.props.like) {\n      this.setState({like: this.props.like})\n    }\n  }\n\n\n  handleClickLike = () => {\n\n    const body = {\n    name: this.props.name,\n    desc: this.props.desc,\n    pic_url: this.props.pic_url,\n    stack_front: this.props.stack_front,\n    stack_back: this.props.stack_back,\n    days_spent: this.props.days_spent,\n    idproject: this.props.idproject\n    }\n\n    if (this.props.likedprojects.length < 3) {\n      fetch('https://capsule-exams.herokuapp.com/like-project', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        })\n        .then(res => res.json())\n        .then(data => {\n          this.setState({\n            like: true\n          })\n          this.props.newlikedproject(data.project)\n          const id = Math.floor(Math.random() * 1000);\n          this.props.alert(\"new\", id)\n          setTimeout( () => {\n            this.props.closealert(id);\n          }, 3000);\n\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    } else {\n      const id = Math.floor(Math.random() * 1000);\n      this.props.alert(\"error\", id)\n      setTimeout( () => {\n        this.props.closealert(id);\n      }, 3000);\n    }\n\n  }\n\n  handleClickDislike = (idproject) => {\n    fetch(`https://capsule-exams.herokuapp.com/like-project/${idproject}`, {\n        method: 'DELETE'})\n        .then(res => res.json())\n        .then(data => {\n          this.props.dislikeproject(idproject)\n          this.setState({\n            like: false\n          })\n          const id = Math.floor(Math.random() * 1000);\n          this.props.alert(\"delete\", id)\n          setTimeout( () => {\n            this.props.closealert(id);\n          }, 3000);\n        })\n        .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n\n    let stackFront = this.props.stack_front.map((e, i) => {\n      return(\n        <Badge key={i} color=\"secondary\" style={{padding: 5, margin: 5}}>{e}</Badge>\n      )\n    })\n\n    let stackBack = this.props.stack_back.map((e, i) => {\n      return(\n        <Badge key={i} color=\"secondary\" style={{padding: 5, margin: 5}}>{e}</Badge>\n      )\n    })\n\n    let display = {}\n\n    !this.state.like && this.props.viewonlylike\n    ? display.display = 'none'\n    : display.display = ''\n\n    return (\n      <Col xs=\"12\" md=\"6\" lg=\"4\" style={display}>\n        <div>\n          <Card style={{marginBottom: 10}}>\n          <div style={{backgroundColor: \"#FD6861\"}}>\n            <CardImg top style={{width: '50%', padding: 20}} src={this.props.pic_url} alt=\"Card image cap\" />\n          </div>\n            <CardBody>\n              <CardTitle style={{fontWeight: \"bold\", fontSize: 18}}>{this.props.name}</CardTitle>\n              <CardSubtitle style={{minHeight: 50, marginBottom: 10}}>{this.props.desc}</CardSubtitle>\n              <CardText><span style={{fontWeight: 'bold'}}>Stack Front</span> <br/><span>{stackFront}</span></CardText>\n              <CardText><span style={{fontWeight: 'bold'}}>Stack Back</span> <br/><span>{stackBack}</span></CardText>\n              <span style={{fontWeight: 'bold', textAlign: 'center', marginTop: 10, marginBottom: 10}}>{this.props.days_spent}/5 days spent</span>\n                    <Progress style={{marginBottom: 20}} color='secondary' value={this.props.days_spent*100/5}/>\n              {\n                !this.state.like\n                  ? <Button onClick={() => this.handleClickLike()} outline color=\"dark\"> + Favorite </Button>\n                  : <Button onClick={() => this.handleClickDislike(this.props.idproject)} color=\"dark\"> - Favorite </Button>\n              }\n\n            </CardBody>\n          </Card>\n        </div>\n      </Col>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    viewonlylike: state.viewonlylike,\n    likedprojects: state.likedprojects\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    newlikedproject: function(project) {\n        dispatch({\n          type: 'newlikedproject',\n          project\n        })\n    },\n    dislikeproject: function(idproject) {\n        dispatch({\n          type: 'dislikeproject',\n          idproject\n        })\n    },\n    alert: function(status, id) {\n        dispatch({\n          type: 'alert',\n          status,\n          id\n        })\n    },\n    closealert: function(id) {\n        dispatch({\n          type: 'closealert',\n          id\n        })\n    },\n  }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Project);\n","import React from 'react';\nimport { Alert } from 'reactstrap';\n\nconst Msg = (props) => {\n\n    return(\n      <Alert color={props.alertType}>\n          {props.msg}\n      </Alert>\n    )\n\n};\n\n\nexport default Msg;\n","import React from 'react';\n\nconst Foot = (props) => {\n  return (\n    <div>\n      <h2 className=\"Footer\">Created after a 10 weeks Bootcamp @La Capsule Academy</h2>\n    </div>\n  );\n};\n\nexport default Foot;\n","import React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport Jumbotron from './Jumbotron';\nimport Project from './Project';\nimport Alert from './Alert';\nimport Footer from './Footer';\nimport { Container, Row } from 'reactstrap';\n\n// REDUX\nimport { connect } from 'react-redux';\n\nclass MainScreen extends Component {\n\n  constructor(){\n    super()\n    this.state={\n      visible: false\n    }\n  }\n\n  componentDidMount = () => {\n\n    // API ALL PROJECTS\n    fetch('https://capsule-exams.herokuapp.com/api/capsule/projects')\n    .then(res => res.json())\n    .then(data => {\n      this.props.handleProjects(data.projects)\n    })\n    .catch(err => console.log(err))\n\n    // MY LIKED PROJECTS\n    fetch('https://capsule-exams.herokuapp.com/all-projects')\n    .then(res => res.json())\n    .then(data => {\n      this.props.handleLikeProjects(data.data)\n    })\n    .catch(err => console.log(err))\n\n  }\n\n\n\n  render() {\n\n    const projects = this.props.fetchProjects;\n    const likedprojects = this.props.likedprojects;\n\n    const projectsList = projects.map((project, i) => {\n      var islike = false;\n        for (var y = 0; y < likedprojects.length; y++) {\n\n          if (project.idproject === likedprojects[y].idproject) {\n            islike = true;\n            break;\n          }\n\n        }\n\n        return(\n          <Project\n            name={project.name}\n            desc={project.desc}\n            pic_url={project.pic_url}\n            stack_back={project.stack_back}\n            stack_front={project.stack_front}\n            days_spent={project.days_spent}\n            idproject={project.idproject}\n            like={islike}\n            displayOnlyLike={this.props.viewonlylike}\n            key={i}/>\n        )\n\n    })\n\n    const alertsList = this.props.alert.map((alert, i) => {\n      return(\n        <Alert style={styles.alert} key={i} msg={alert.msg} isOpen={alert.status} alertType={alert.alertType} fade={true}/>\n      )\n    })\n\n    return (\n        <div>\n          <Navbar/>\n          <div style={styles.main}>\n          {alertsList}\n          </div>\n          <Jumbotron/>\n            <Container>\n              <Row>\n              { projectsList }\n              {\n                this.props.viewonlylike && this.props.likedprojects.length < 1\n                  ? <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', width: '100%', textAlign: 'center', margin: 100, color: '#FD6861'}}><h3>Aucun projet dans le TOP 3...</h3></div>\n                  : ''\n              }\n              </Row>\n            </Container>\n          <Footer/>\n        </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    handleProjects: function(projects) {\n        dispatch({\n          type: 'getprojects',\n          projects\n        })\n    },\n    handleLikeProjects: function(projects) {\n        dispatch({\n          type: 'getlikedprojects',\n          projects\n        })\n    },\n\n  }\n}\n\nconst styles = {\n  main: {\n    position: 'fixed',\n    top: 54,\n    left: 0,\n    width: '100%',\n    zIndex: 999999\n  },\n  alert: {\n    margin: '0 auto',\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    fetchProjects: state.projects,\n    likedprojects: state.likedprojects,\n    viewonlylike: state.viewonlylike,\n    alert: state.alert,\n  }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MainScreen);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport MainScreen from \"./Components/MainScreen\";\n\n// REDUCERS\nimport projects from \"./Reducers/projects.reducer\";\nimport likedprojects from \"./Reducers/likedprojects.reducer\";\nimport viewonlylike from \"./Reducers/viewonlylike.reducer\";\nimport alert from \"./Reducers/alert.reducer\";\n\n// REDUX\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers } from \"redux\";\nconst store = createStore(\n  combineReducers({ projects, likedprojects, viewonlylike, alert })\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <MainScreen />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","export default function(projects = [], action){\n  var projectsCopy = [...projects]\n  if(action.type === 'getprojects'){\n    const projects = action.projects\n    for (var i = 0; i < projects.length; i++) {\n      projectsCopy.push(projects[i])\n    }\n    return projectsCopy;\n  } else {\n    return projects;\n  }\n}\n\n\n","export default function(likedprojects = [], action){\n  var likedprojectsCopy = [...likedprojects]\n  if(action.type === 'getlikedprojects'){\n    const likedproject = action.projects;\n    for (var i = 0; i < likedproject.length; i++) {\n      likedprojectsCopy.push(likedproject[i])\n    }\n    return likedprojectsCopy;\n  } else if (action.type === 'newlikedproject'){\n    likedprojectsCopy.push(action.project)\n    return likedprojectsCopy;\n  } else if (action.type === 'dislikeproject'){\n    for (var y = 0; y < likedprojectsCopy.length; y++) {\n      let index;\n      if (likedprojectsCopy[y].idproject === action.idproject) {\n        index = likedprojectsCopy.indexOf(likedprojectsCopy[y]);\n        likedprojectsCopy.splice(index, 1)\n        break;\n      }\n    }\n    return likedprojectsCopy;\n  } else {\n    return likedprojects;\n  }\n}\n","export default function(viewonlylike = false, action){\n  if(action.type === 'viewonlylike'){\n    if(action.view){\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return viewonlylike;\n  }\n}\n","export default function(alert = [], action) {\n\n  let alertCopy = [...alert];\n\n  if(action.type === 'alert'){\n\n    if(action.status === \"new\"){\n      alertCopy.push({\n        status: true,\n        msg: `Le projet a été ajouté avec succès à votre TOP 3!`,\n        alertType: 'success',\n        id: action.id\n      })\n      return alertCopy;\n\n    } else if(action.status === \"delete\"){\n      alertCopy.push({\n        status: true,\n        msg: `Le projet a été supprimé de votre TOP 3!`,\n        alertType: 'secondary',\n        id: action.id\n      })\n      return alertCopy;\n\n  } else if(action.status === \"error\"){\n      alertCopy.push({\n        status: true,\n        msg: `Impossible d'ajouter plus de 3 projets`,\n        alertType: 'danger',\n        id: action.id\n      })\n      return alertCopy;\n    }\n\n  } else if (action.type === 'closealert'){\n    let index;\n    for (var i = 0; i < alertCopy.length; i++) {\n      if(alertCopy[i].id === action.id){\n        index = alertCopy.indexOf(alertCopy[i]);\n        alertCopy.splice(index, 1)\n        break;\n      }\n    }\n\n    return alertCopy;\n\n  } else {\n    return alert;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}